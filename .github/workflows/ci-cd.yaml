name: Test, build and push

on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened, labeled]
  workflow_dispatch:

jobs:
  test-and-lint:
    name: Run unit tests and linters
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up pnpm
        uses: pnpm/action-setup@v4

      - name: Set up Node.js with pnpm caching
        uses: actions/setup-node@v4
        with:
          node-version: '24'
          cache: 'pnpm'

      - name: Install Poetry
        uses: snok/install-poetry@v1.4.1

      - name: Install Kerberos development libraries for worker
        run: sudo apt-get update && sudo apt-get install -y libkrb5-dev

      - name: Install root and web app dependencies
        run: pnpm install

      - name: Install Python dependencies for worker
        run: poetry install --no-interaction --no-root
        working-directory: ./apps/worker

      - name: Install Python dependencies for api
        run: poetry install --no-interaction --no-root
        working-directory: ./apps/api

      - name: Run linters for all apps
        run: pnpm lint

      - name: Run tests for all apps
        run: pnpm test

      - name: Build all apps
        run: pnpm build

  build-and-push:
    name: Build and push images of changed services
    runs-on: ubuntu-latest
    needs: test-and-lint

    strategy:
      matrix:
        service: [worker, api, web]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Check for changed files
        id: changed-files
        uses: tj-actions/changed-files@v44
        with:
          files: apps/${{ matrix.service }}/**

      - name: Determine image tag suffix
        id: tagging
        if: steps.changed-files.outputs.any_changed == 'true'
        run: |
          GIT_SHA=$(git rev-parse --short "$GITHUB_SHA")
          if [[ "${{ github.event_name }}" == "pull_request" ]]; then
            echo "suffix=pr-${{ github.event.number }}-${GIT_SHA}" >> "$GITHUB_OUTPUT"
          else
            echo "suffix=${GIT_SHA}" >> "$GITHUB_OUTPUT"
          fi

      - name: Log in to Quay.io
        if: steps.changed-files.outputs.any_changed == 'true'
        uses: redhat-actions/podman-login@v1
        with:
          registry: quay.io
          username: ${{ secrets.QUAY_USERNAME }}
          password: ${{ secrets.QUAY_PASSWORD }}

      - name: Build and push image
        if: steps.changed-files.outputs.any_changed == 'true'
        run: |
          SUFFIX="${{ steps.tagging.outputs.suffix }}"
          IMAGE_TAG="${{ secrets.QUAY_REPO }}:${{ matrix.service }}-${SUFFIX}"
          
          echo "Building and pushing image: ${IMAGE_TAG}"
          
          podman build -f ./apps/${{ matrix.service }}/Containerfile -t ${IMAGE_TAG} .
          podman push ${IMAGE_TAG}
