---
- name: "Create or update the API configuration"
  kubernetes.core.k8s:
    state: present
    namespace: "{{ project_namespace }}"
    definition:
      apiVersion: v1
      kind: ConfigMap
      metadata:
        name: pullsar-config
      data:
        API_ALL_OPERATORS_CATALOG: "{{ api_all_operators_catalog }}"
        API_EXPORT_MAX_DAYS: "{{ api_export_max_days | string }}"

- name: "Create or update PostgreSQL credentials secret"
  kubernetes.core.k8s:
    state: present
    namespace: "{{ project_namespace }}"
    definition:
      apiVersion: v1
      kind: Secret
      metadata:
        name: postgres-credentials
      stringData: "{{ postgres_credentials }}"

- name: "Create or update Quay API token secret"
  kubernetes.core.k8s:
    state: present
    namespace: "{{ project_namespace }}"
    definition:
      apiVersion: v1
      kind: Secret
      metadata:
        name: quay-api-tokens
      stringData:
        QUAY_API_TOKENS_JSON: "{{ quay_api_tokens }}"

- name: "Create or update worker registry auth secret"
  kubernetes.core.k8s:
    state: present
    namespace: "{{ project_namespace }}"
    definition:
      apiVersion: v1
      kind: Secret
      metadata:
        name: worker-registry-auth
      data:
        auth.json: "{{ worker_registry_auth | b64encode }}"

- name: "Create or update service account TLS secret"
  kubernetes.core.k8s:
    state: present
    namespace: "{{ project_namespace }}"
    definition:
      apiVersion: v1
      kind: Secret
      metadata:
        name: pullsar-sa-cert
      type: kubernetes.io/tls
      data:
        tls.crt: "{{ pullsar_sa_cert_crt | b64encode }}"
        tls.key: "{{ pullsar_sa_cert_key | b64encode }}"

- name: "Create or update PostgreSQL from official OpenShift template"
  kubernetes.core.k8s:
    state: present
    namespace: "{{ project_namespace }}"
    definition: "{{ lookup('template', 'postgresql-persistent.yml') }}"
    parameters:
      POSTGRESQL_USER: "{{ postgres_credentials.DB_USER }}"
      POSTGRESQL_PASSWORD: "{{ postgres_credentials.DB_PASSWORD }}"
      POSTGRESQL_DATABASE: "{{ postgres_credentials.DB_NAME }}"
      DATABASE_SERVICE_NAME: "{{ postgres_credentials.DB_HOST }}"
      VOLUME_CAPACITY: "{{ postgres_volume_capacity }}"
      POSTGRESQL_VERSION: "{{ postgres_version }}"
      MEMORY_LIMIT: "{{ postgres_memory_limit }}"

- name: "Create ConfigMap for database migration script"
  kubernetes.core.k8s:
    state: present
    namespace: "{{ project_namespace }}"
    definition:
      apiVersion: v1
      kind: ConfigMap
      metadata:
        name: postgresql-migration-script
      data:
        V1__initial_setup.sql: "{{ lookup('file', '../../files/migrations/V1__initial_setup.sql') }}"

- name: "Run database migration job"
  kubernetes.core.k8s:
    state: present
    namespace: "{{ project_namespace }}"
    definition: "{{ lookup('template', 'postgresql-migration-job.yml') }}"
